[{"/home/cyril/pierreangot/src/index.js":"1","/home/cyril/pierreangot/src/App.js":"2","/home/cyril/pierreangot/src/reportWebVitals.js":"3"},{"size":500,"mtime":1609884477155,"results":"4","hashOfConfig":"5"},{"size":6727,"mtime":1610043643241,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1609767544426,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"qqp58s",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"/home/cyril/pierreangot/src/index.js",[],["16","17"],"/home/cyril/pierreangot/src/App.js",["18"],"import './App.css';\nimport files from \"./site.json\";\nimport React, { useState } from 'react';\nimport { Document, Page } from 'react-pdf';\nimport { pdfjs } from 'react-pdf';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n\nfunction PdfDisplayer(props) {\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n    setPageNumber(1);\n  }\n\n  function changePage(offset) {\n    setPageNumber(prevPageNumber => prevPageNumber + offset);\n  }\n\n  function previousPage() {\n    changePage(-1);\n  }\n\n  function nextPage() {\n    changePage(1);\n  }\n\n  const toDisplay = `${process.env.PUBLIC_URL}${props.name}`;\n  return (\n    <div>\n      <Document\n        file={toDisplay}\n        onLoadSuccess={onDocumentLoadSuccess}\n        style={{ margin: 0, padding: 0 }}\n      >\n        <Page pageNumber={pageNumber}\n          height={800}\n          style={{ margin: 0, padding: 0 }}\n          scale={props.scale}\n          renderMode=\"svg\"\n          rotate={props.rotate}\n        />\n      </Document>\n      <div className=\"navigationButtons\">\n        <p>\n          Page {pageNumber || (numPages ? 1 : '--')} sur {numPages || '--'}\n        </p>\n        <button\n          type=\"button\"\n          disabled={pageNumber <= 1}\n          onClick={previousPage}\n        >\n          Précédent\n        </button>\n        <button\n          type=\"button\"\n          disabled={pageNumber >= numPages}\n          onClick={nextPage}\n        >\n          Suivant\n        </button>\n        <button onClick={() => { props.changeScale(0.2) }}>\n          Agrandir\n        </button>\n        <button onClick={() => { props.changeScale(-0.2) }}>\n          Réduire\n        </button>\n        <button onClick={() => { props.changeRotation() }}>Rotation</button>\n        <button>\n          <a download={toDisplay} href={toDisplay}>Télécharger</a>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      baseButton: true,\n      fullPath: '/sitePdfs/', //building after clicking each new button, i have to implement a return button two\n      fileName: '',\n      actualObject: [],\n      scale: 1,\n      displayHome: true,\n      displayBrowse: false,\n      displayPrice: false,\n      loading: false,\n      rotation: 0,\n    }\n    this.baseButtonHandleClick = this.baseButtonHandleClick.bind(this);\n    this.displayListHandleClick = this.displayListHandleClick.bind(this);\n    this.reinitState = this.reinitState.bind(this);\n    this.changeScale = this.changeScale.bind(this);\n    this.displayBrowse = this.displayBrowse.bind(this);\n    this.displayHome = this.displayHome.bind(this);\n    this.displayPrice = this.displayPrice.bind(this);\n    this.rotate = this.rotate.bind(this);\n    this.endLoading = this.endLoading.bind(this);\n  }\n\n  scrollToTop() {\n    window.scrollTo({\n      top: 0,\n    });\n  }\n\n  changeScale(value) {\n    this.setState({\n      scale: this.state.scale + value\n    });\n  }\n\n  rotate() {\n    if (this.state.rotation === 270)\n      this.setState({\n        rotation: 0\n      });\n    else {\n      this.setState({\n        rotation: this.state.rotation + 90\n      });\n    }\n  }\n\n  baseButtonHandleClick() {\n    this.setState({\n      baseButton: false,\n      actualObject: [...files[0].contents]\n    });\n  }\n\n  displayListHandleClick(name, typeofbutton, index) {\n    if (typeofbutton === \"directory\") {\n      this.setState({\n        actualObject: this.state.actualObject[index].contents,\n        fullPath: this.state.fullPath + `${name}/`\n      });\n    }\n    else {\n      this.setState({\n        fileName: `${this.state.fullPath}${name}`,\n        loading: true\n      });\n      setTimeout(this.endLoading, 2000)\n    }\n    this.scrollToTop();\n  }\n\n  endLoading() {\n    this.setState({\n      loading: false\n    })\n  }\n\n  reinitState() {\n    this.setState({\n      baseButton: true,\n      fullPath: '/sitePdfs/',\n      fileName: '',\n      actualObject: [],\n      scale: 1\n    });\n  }\n\n  displayHome() {\n    this.setState({\n      displayHome: true,\n      displayBrowse: false,\n      dislayWiki: false,\n      displayPrice: false\n    });\n  }\n\n  displayBrowse() {\n    this.setState({\n      displayHome: false,\n      displayBrowse: true,\n      dislayWiki: false,\n      displayPrice: false\n    });\n  }\n\n  displayPrice() {\n    this.setState({\n      displayHome: false,\n      displayBrowse: false,\n      dislayWiki: false,\n      displayPrice: true\n    });\n  }\n\n  render() {\n    const pathStyle = this.state.loading ? { color: \"red\" } : null;\n    const baseButton = <button onClick={this.baseButtonHandleClick}>Parcourir</button>\n    const reinitButton = <button onClick={this.reinitState}>Réinitialiser</button>\n    const displayList = this.state.actualObject.map((item, index) => {\n      return (\n        <button onClick={() => { this.displayListHandleClick(item.name, item.type, index) }}\n          className=\"displayList\"\n          index={index} key={item.name}\n          typeofbutton={item.type}\n        >\n          {item.name}\n        </button>\n      );\n    });\n    //todelete after test\n    displayList.unshift(<button style={pathStyle}>{this.state.fullPath}{this.state.loading && \"...Chargement du document\"}</button>)\n    const displayDiv = <div className=\"displayDiv\">{reinitButton}{displayList}</div>\n    return (\n      <div>\n        {<div className=\"header\">\n          <h1>Pierre Angot, Compositeur Français</h1>\n          <div className=\"menu\">\n            <p onClick={this.displayHome}>Acceuil</p>\n            <p onClick={this.displayBrowse}>Parcourir les partitions</p>\n            <a href=\"https://fr.wikipedia.org/wiki/Pierre_Angot\" target=\"_blank\" id=\"wiki\">Wikipedia</a>\n            <p onClick={this.displayPrice}>Tarifs et droits d'utilisation</p>\n          </div>\n        </div>}\n        {this.state.displayBrowse && <div className=\"searchAndDisplay\">\n          <div className=\"searchDiv\">\n            {this.state.baseButton ? baseButton : null}\n            {!this.state.baseButton && displayDiv}\n          </div>\n          <PdfDisplayer\n            className=\"appWrapper\"\n            name={this.state.fileName}\n            scale={this.state.scale}\n            changeScale={this.changeScale}\n            rotate={this.state.rotation}\n            changeRotation={this.rotate}\n          />\n        </div>}\n        {this.state.displayHome &&\n          <div className=\"homeDiv\">\n          </div>\n        }\n        {this.state.displayPrice &&\n          <div className=\"priceDiv\">\n          </div>\n        }\n\n      </div>\n    );\n  }\n\n}\n\n//console.log(files);\n\nexport default App;\n","/home/cyril/pierreangot/src/reportWebVitals.js",[],{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":221,"column":13,"nodeType":"25","endLine":221,"endColumn":92},"no-native-reassign",["26"],"no-negated-in-lhs",["27"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation"]